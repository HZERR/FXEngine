{
  "fxEngine": {
    "applicationContext": {
      "register": {
        "beanAlreadyExistsException": "Экземпляр класса '{}' уже существует и не может быть переопределен"
      },
      "getBeanByQualifier": {
        "started": "Выполняется поиск бина '{}' по квалификатору",
        "annotationWasNotFound": {
          "continuationSearchInChildAnnotation": "У класса '{}' отстутствует аннотация {} напрямую. Выполняется поиск дочерних аннотаций..."
        },
        "getByNameOrQualifier": "Получение бина '{}' по имени/квалификатору '{}'",
        "getByQualifier": "Получение бина '{}' по квалификатору '{}'",
        "qualifierValueIsEmptyException": "Необходимая аннотация 'Qualifier' присутствует в классе '{}'. Однако она имеет пустое значение и движок не может найти дочернюю аннотацию по отношению к Qualifier аннотации",
        "qualifierAnnotationNotFoundException": "Необходимая аннотация 'Qualifier' отсутствует в классе '{}'"
      },
      "getApplicationLocalizationProvider": {
        "illegalAccessBeanException": "Невозможно получить доступ к локализации отладки приложения, если она отключена"
      }
    },
    "init": {
      "loggerSuccessfullyConfigured": "Отладчик был успешно сконфигурирован",
      "selectedLoggingDirectory": "Выбранная директория отладки: '{}'",
      "engineSuccessfullyInitialized": "FXEngine был успешно инициализирован",
      "closedException": "Произошла ошибка при завершении работы приложения"
    },
    "start": {
      "engineSuccessfullyStarted": "FXEngine был успешно запущен"
    },
    "controller": {
      "getApplicationLanguageMetaData": {
        "languageMetaDataNotFoundException": "Невозможно найти метаданные с локалью '{}'"
      },
      "initialize": {
        "success": "'{}' был успешно инициализирован",
        "controllerSuccessfullyRegistered": "'{}' успешно зарегистрирован в системе"
      },
      "onDestroy": "'{}' был успешно уничтожен"
    },
    "stylesheetLoader": {
      "stylesheetLocationNotFoundException": "Невозможно найти stylesheet по пути '{}'"
    },
    "themeLoader": {
      "prepareTheme": "Подготовка '{}' темы для контроллера '{}'",
      "targetThemeFileLocationNotFoundException": "Файл '{}' темы для '{}' не найден",
      "skippingUseThemeOnTargetController": "Пропуск использования '{}' темы на '{}'...",
      "themeOnTargetControllerSuccessfullySettingUp": "Настройка '{}' темы на '{}' успешно завершена",
      "themeSuccessfullySettingUp": "Настройка '{}' темы успешно завершена"
    },
    "entityLoader": {
      "loadEntity": {
        "entitySuccessfullyLoaded": "Сущность '{}' была успешно загружена"
      }
    },
    "applicationManager": {
      "changeThemeUsingThemeName": {
        "themeNotFoundException": "Тема '{}' не найдена"
      },
      "changeThemeUsingThemeMetaData": {
        "themeNotFoundException": "Невозможно найти тему приложения по классу метаданных '{}'"
      },
      "theme": {
        "gettingThemeFromCache": "Получение '{}' темы для '{}' из кэша..."
      }
    },
    "themeNotificationListener": {
      "detectTheme": "Обнаружена '{}' тема"
    }
  }
}